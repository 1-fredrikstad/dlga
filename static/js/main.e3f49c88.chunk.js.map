{"version":3,"sources":["Songs.js","App.js","serviceWorker.js","index.js"],"names":["Songs","title","melody","song","author","useStyles","makeStyles","list","width","fullList","App","react_default","a","createElement","className","SwipeableTemporaryDrawer","side","classes","_React$useState","React","useState","left","_React$useState2","Object","slicedToArray","state","setState","_React$useState3","_React$useState4","songIndex","setSongIndex","toggleDrawer","open","event","type","key","objectSpread","defineProperty","setSong","index","Button","onClick","SwipeableDrawer","onClose","onOpen","role","onKeyDown","List","songs","map","ListItem","button","ListItemText","primary","App_Song","SongWrapper","styled","div","_templateObject","Song","_ref","mel","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e3f49c88.chunk.js","sourcesContent":["export default [\n  {\n    title: \"1. SPEIDERBØNNEN\",\n    melody: \"melody\",\n    song: `\nKjære far i høye himmel,\nhør mitt hjertes stille bønn:\nHvor jeg er i verdens vrimmel,\nla meg ferdes som din sønn.\nLa meg leve deg til ære,\nhedre Norge, far og mor,\nandre folk til nytte være,\nlyde speiderlovens ord.\n    `,\n    author: \"Hans Møller Gasmann\"\n  },\n  {\n    title: \"2. LILJESANGEN\",\n    melody: \"\",\n    song: `\n1. La vaie vårt banner med liljen,\ni storm og i regn og i sol.\nLa kalle på motet og viljen,\ndet tredelte speidersymbol.\n\nRefr.: Vår lilje er merket som binder\nen broderskapskjede rundt jord, \nog liljen er merket som minner\nom løftets forpliktende ord.\n\n2. Et blad byder meg, jeg skal være\nsann korsmann for Herren, min Gud.\nI tro og i bønn skal jeg ære\nhans navn og hans hellige bud.\n\n3. Mitt land skal jeg fremme og bygge\nog tjene i arbeid og råd.\nDets frihet og fred skal jeg trygge\ni offer, i innsats og dåd.\n\n4. Det annet blad gjelder min neste\nsom trenger min hjelpende hånd.\nJeg lovet å gjøre mitt beste\ni kristen barmhjertighets ånd.\n\n5. Det tredje av bladene setter\nmin ferd opp mot speiderlovs krav.\nMin vandring i livet beretter\nhvor meget jeg makter derav.\n    \n    `,\n    author: \"\"\n  },\n  {\n    title: \"3.  ØSTFOLDSANGEN\",\n    melody: \"\",\n    song: `\n1. Mitt Østfold er et fagert land\nhvor gyldne akrer bølger,\nhvor skog og mark og stille vann\nså skjønt hverandre følger.\nDer svømmer elven lun og klar,\nmed fisk bak nøkkerosens blad.\n:/: I Østfold har jeg hjemme :/ : \n\n2.  I Østfold er der intet fjell\nsom stolt mot sky seg hever.\nMen kom en solblank sommerkveld\nnår aspeløvet bever.\nI vest hvor fjordens bølger slår,\ni øst hvor grenseskogen står.\n:/: I Østfold har jeg hjemme :/ :\n\n3. Se Glomma renner stolt og trygg\nmot syd hvor Sarpen drønner.\nMed tømmer på sin brede rygg,\nmed bud fra dalens sønner.\nJeg hører sang fra sag i sag,\nog fossedur og hammerslag. \n:/: I Østfold har jeg hjemme :/ :\n\n4. Bak Jeløys sommerkledde lund,\nvær hilset Moss derinne. \nOg Fredriks by på gammel grunn,\nog Borg med Olavs minne.\nOg gamle Halden lengst i syd,\njeg nevne vil ditt navn med fryd.\n:/: I Østfold har jeg hjemme :/ :\n\n5. Det nynner gjennom skog og eng. \nOg det er bondens vise.\nHan styrer lett sin tunge plog,\nhans verk er verd å prise.\nVi vandrer gjennom odelsjord.\nHer strevet far, her strevet mor.\n:/: I Østfold har jeg hjemme :/ :\n    \n    `,\n    author: \"\"\n  },\n  {\n    title: \"4.  TROPPSSANG\",\n    melody: \"Yipee-ai\",\n    song: `\n1. Hos den kjære, gamle første tropp,\ner humøret stadig høyt på topp.\nNår humøret er tilstede,\nda går alt med liv og glede,\ni den kjære, gamle første tropp.\n\n2. :/: Vi ofte trasker rundt i vær og vind. :/:\nMen når ryggsekken den tynger,\nvi en liten vise synger.\nDermed er vi jo straks lysere i sinn.\n\n3. :/: Når lederne er strenge mang en gang. :/:\nVi da tar en serenade\nog straks føler vi oss glade,\nselv om lederne er harde mang en gang.\n\n4. :/: Å koke mat er ofte nokså stritt. :/:\nMed en liten sang så jager\nvi bort alle dagens plager,\nog straks smiler vi jo bredere og blidt.\n\n5. :/: Vi lengter etter mamma og han far. :/:\nVi en liten strofe nynner\nog vår lengsel straks forsvinner,\nog vi glemmer både mamma og han far.\n\n6. Første tropp har jo alltid vært bekjent,\nfor å synge både høyt og klart og rent.\nJa, vi alltid har det målet,\nhøyt mot him’lens sky og skråle,\nså det høres kan at Første tropp er her!\n    \n    `,\n    author: \"S. N.\"\n  },\n  {\n    title: \"5.  VÆR HILSET, BANNER . . .\",\n    melody: \"\",\n    song: `\n1. Vær hilset, banner fra første tropp.\nVær hilset inn i vår speiderflokk.\nVi ser deg gjerne og skal deg verne\nsom merket vårt.\n\n2. Vær hilset du av hver speider kropp.\nVær hilset når vi deg løfter opp.\nNår frem vi strever, vårt navn du nevner.\nHer står vår tropp.\n\n3. Så skal du være vår felles venn.\nI teten skal vi deg bringe frem.\nOg vi vil lære, ditt navn å ære,\nfor by og grend.\n    \n    `,\n    author: \"K. W.\"\n  },\n  {\n    title: \"6.  LØFT DEG VÅRT FLAGG\",\n    melody: \"\",\n    song: `\nLøft deg vårt flagg imot himmelens blå,\nvårt fedrelands vakre symbol.\nvai fritt over hjemmene store og små,\nvai muntert i regn, blest og sol.\nOg nå når du heises ved gryende dag,\nvi hilser deg vakre trefargete flagg,\nvi hilser deg vakre trefargete flagg.\nHurra! Hurra! Hurra! \n    \n    `,\n    author: \"Hans Møller Gasmann\"\n  },\n  {\n    title: \"FOLD DEG UT\",\n    melody: \"Kristi stridsmenn\",\n    song: `\n1. Fold deg ut, vårt frihetsmerke,\nfagre norske flagg.\nUnder deg vi vokser sterke\nfrem til frihetsdag;\nunder deg på fredens bane\nvil vi stevne frem;\nunder deg, vår hedersfane,\nslå for frihet, hjem.\n\n2. Fold deg ut med fortidsminne\nkraftig som ditt blå.\nDet skal styrke oss å vinne,\nselv om vi er små,\nfrem til fedres ros og ære,\nfrem på idretts lei,\nja, med kraft og mot deg bære\nhøyt på fremtids vei.\n`,\n    author: \"Anna Meyer\"\n  }\n];\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Button from \"@material-ui/core/Button\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport songs from \"./Songs\";\nimport styled from \"styled-components\";\n\nconst useStyles = makeStyles({\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: \"auto\"\n  }\n});\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SwipeableTemporaryDrawer />\n    </div>\n  );\n}\n\nexport default App;\n\nfunction SwipeableTemporaryDrawer() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    left: false\n  });\n\n  const [songIndex, setSongIndex] = React.useState(null);\n\n  const toggleDrawer = (side, open) => event => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [side]: open });\n  };\n\n  const setSong = index => () => {\n    setSongIndex(index);\n  };\n  // https://material-ui.com/components/drawers/\n  const sideList = side => (\n    <div\n      className={classes.list}\n      role=\"presentation\"\n      onClick={toggleDrawer(side, false)}\n      onKeyDown={toggleDrawer(side, false)}\n    >\n      <List>\n        {songs.map((song, index) => (\n          <ListItem button key={index} onClick={setSong(index)}>\n            <ListItemText primary={song.title} />\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n\n  return (\n    <div>\n      <Button onClick={toggleDrawer(\"left\", true)}>{\"Meny >\"}</Button>\n\n      <SwipeableDrawer\n        open={state.left}\n        onClose={toggleDrawer(\"left\", false)}\n        onOpen={toggleDrawer(\"left\", true)}\n      >\n        {sideList(\"left\")}\n      </SwipeableDrawer>\n      {songIndex == null ? (\n        <h1>\"Ingen sang valgt\"</h1>\n      ) : (\n        <Song song={songs[songIndex]} />\n      )}\n    </div>\n  );\n}\n\nconst SongWrapper = styled.div`\n  padding: 10px;\n`;\n\nconst Song = ({ song }) => (\n  <SongWrapper className=\"song-wrapper\">\n    <h1>{song.title}</h1>\n    <h2>{song.mel}</h2>\n    <pre>{song.song}</pre>\n  </SongWrapper>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}